/*
 * Copyright 2017 ltu.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance
 * with the License. A copy of the License is located at
 *
 * http://ltu.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
 * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
package com.ltu.secret.model.secret;

import java.util.Date;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIndexHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.gson.annotations.Expose;
import com.ltu.secret.configuration.DynamoDBConfiguration;

// TODO: Auto-generated Javadoc
/**
 * User object model - this class is annotated to be used with the DynamoDB
 * object mapper.
 * @author uyphu
 * created on May 20, 2017
 */
@DynamoDBTable(tableName = DynamoDBConfiguration.SECRET_TABLE_NAME)
public class Secret implements Comparable<Secret>{
	/** The id. */
	@DynamoDBHashKey(attributeName = "id")
	@DynamoDBAutoGeneratedKey
	@Expose
	private String id;

	/** The email. */
	@DynamoDBIndexHashKey
	@DynamoDBAttribute(attributeName = "userId")
	@JsonProperty(value="userId", required=true)
	@Expose
	private String userId;
	
	/** The domain. */
	@DynamoDBAttribute(attributeName = "domain")
	@Expose
	private String domain;
	
	/** The username. */
	@DynamoDBAttribute(attributeName = "username")
	@Expose
	private String username;
	
	/** The search text. */
	@DynamoDBAttribute(attributeName = "searchText")
	@Expose
	private String searchText;
	
	/** The password. */
	@DynamoDBAttribute(attributeName = "password")
	private String password;

	/** The note. */
	@DynamoDBAttribute(attributeName = "note")
	@Expose
	private String note;

	/** The created at. */
	@DynamoDBAttribute(attributeName = "createdAt")
	@Expose
	private Date createdAt;
	
	/**
	 * Instantiates a new user.
	 */
	public Secret() {

	}

	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	public String getId() {
		return id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id the new id
	 */
	public void setId(String id) {
		this.id = id;
	}

	/**
	 * Gets the password.
	 *
	 * @return the password
	 */
	public String getPassword() {
		return password;
	}

	/**
	 * Sets the password.
	 *
	 * @param password the new password
	 */
	public void setPassword(String password) {
		this.password = password;
	}

	/**
	 * Gets the created at.
	 *
	 * @return the created at
	 */
	public Date getCreatedAt() {
		return createdAt;
	}

	/**
	 * Sets the created at.
	 *
	 * @param createdAt the new created at
	 */
	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	/**
	 * Gets the user id.
	 *
	 * @return the user id
	 */
	public String getUserId() {
		return userId;
	}

	/**
	 * Sets the user id.
	 *
	 * @param userId the new user id
	 */
	public void setUserId(String userId) {
		this.userId = userId;
	}

	/**
	 * Gets the domain.
	 *
	 * @return the domain
	 */
	public String getDomain() {
		return domain;
	}

	/**
	 * Sets the domain.
	 *
	 * @param domain the new domain
	 */
	public void setDomain(String domain) {
		this.domain = domain;
	}

	/**
	 * Gets the username.
	 *
	 * @return the username
	 */
	public String getUsername() {
		return username;
	}

	/**
	 * Sets the username.
	 *
	 * @param username the new username
	 */
	public void setUsername(String username) {
		this.username = username;
	}

	/**
	 * Gets the note.
	 *
	 * @return the note
	 */
	public String getNote() {
		return note;
	}

	/**
	 * Sets the note.
	 *
	 * @param note the new note
	 */
	public void setNote(String note) {
		this.note = note;
	}

	/**
	 * Gets the search text.
	 *
	 * @return the search text
	 */
	public String getSearchText() {
		return searchText;
	}

	/**
	 * Sets the search text.
	 *
	 * @param searchText the new search text
	 */
	public void setSearchText(String searchText) {
		this.searchText = searchText;
	}

	@Override
	public int compareTo(Secret arg0) {
		return userId.compareTo(arg0.userId);
	}

	@Override
	public String toString() {
		return "Secret [id=" + id + ", userId=" + userId + ", domain=" + domain + ", username=" + username
				+ ", searchText=" + searchText + ", password=" + password + ", note=" + note + ", createdAt="
				+ createdAt + "]";
	}
	
}

